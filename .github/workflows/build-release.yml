name: build-release
on:
  workflow_dispatch:
    inputs:
      release-version:
        type: string
        description: Firmware Version
        default: 'v0.0.0'
        required: true
      release-type:
        type: choice
        description: Production or Development?
        options: 
        - production
        - development
        default: 'production'
  pull_request:
    
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v3
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v4
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
        pio pkg update
        # pio run -t clean
    - name: Set version var
      run: echo "PLATFORMIO_BUILD_FLAGS=-DFW_VERSION='\"${{ inputs.release-version }}\"' -DREPO_PATH='\"$GITHUB_REPOSITORY\"'" >> $GITHUB_ENV
      if: github.event_name	== 'workflow_dispatch'
    - name: Run PlatformIO
      run: pio run -e esp-wrover-kit
  release:
    needs: build
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Rename firmware
      run: cp .pio/build/esp-wrover-kit/firmware.bin esp32.bin
    - name: Development Release
      uses: ncipollo/release-action@v1
      if: inputs.release-type == 'development'
      with:
        artifacts: '*.bin'
        generateReleaseNotes: true
        tag: ${{ inputs.release-version }}
        token: ${{ secrets.GITHUB_TOKEN }}
        prerelease: true
        makeLatest: false
    - name: Production Release
      uses: ncipollo/release-action@v1
      if: inputs.release-type == 'production'
      with:
        artifacts: '*.bin'
        generateReleaseNotes: true
        tag: ${{ inputs.release-version }}
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Archive Build
      uses: actions/upload-artifact@v3
      with:
        path: '*.bin'
